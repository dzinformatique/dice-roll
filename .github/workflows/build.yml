name: Build Android APK & AAB

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write   # ضروري لرفع الملفات على GitHub Releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4   # v4 آخر نسخة

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        gradle-version: 8.7

    - name: Install Cordova
      run: npm install -g cordova

    - name: Install dependencies
      run: npm install

    # ✅ الأيقونات و splash (لو عندك فعلاً هذي الملفات)
    - name: Copy icons and splash
      run: |
        mkdir -p res/icons res/splash
        if [ -f assets/icons/icon.png ]; then cp assets/icons/icon.png res/icons/icon.png; fi
        if [ -f assets/splash/splash.png ]; then cp assets/splash/splash.png res/splash/splash.png; fi

    # ✅ إضافة plugin السبلاش (يتجاوز لو موجود)
    - name: Add splashscreen plugin
      run: cordova plugin add cordova-plugin-splashscreen || echo "Already exists"

    - name: Add Android platform
      run: cordova platform add android@12.0.1   # 13 غير متوفرة حالياً على npm

    # بناء AAB (Google Play)
    - name: Build Android AAB
      run: cordova build android --release -- --packageType=bundle

    # بناء APK (للاختبار)
    - name: Build Android APK
      run: cordova build android --release -- --packageType=apk

    # استخراج keystore من GitHub Secrets
    - name: Decode Keystore
      run: |
        echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > my-release-key.jks

    # تحديد اسم APK الصحيح قبل التوقيع
    - name: Set APK file path
      run: |
        if [ -f "platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          echo "APK_FILE=platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk" >> $GITHUB_ENV
        else
          echo "APK_FILE=platforms/android/app/build/outputs/apk/release/app-release.apk" >> $GITHUB_ENV
        fi

    # توقيع APK
    - name: Sign APK
      run: |
        jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore my-release-key.jks \
          -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
          -keypass "${{ secrets.KEY_PASSWORD }}" \
          "$APK_FILE" \
          "${{ secrets.KEY_ALIAS }}"

    # محاذاة APK (zipalign)
    - name: Align APK
      run: |
        $ANDROID_HOME/build-tools/34.0.0/zipalign -v 4 \
          "$APK_FILE" \
          platforms/android/app/build/outputs/apk/release/app-release-signed.apk

    # رفع الملفات النهائية إلى GitHub Releases
    - name: Upload build to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: |
          platforms/android/app/build/outputs/bundle/release/app-release.aab
          platforms/android/app/build/outputs/apk/release/app-release-signed.apk
        tag_name: v1.0.${{ github.run_number }}
        name: "Build ${{ github.run_number }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
